class Solution {
public:
    int countPairs(vector<int>& nums,int left,int right){
        if(left==right) return 0;
        else{
            int mid=(left+right)/2;
            int countleft=countPairs(nums,left,mid);
            int countright=countPairs(nums,mid+1,right);
            int p0=0;
            int p1=0;
            int pairs_ltor=0;
            p0=left;
            p1=mid+1;
            //cout<<"p0"<<p0<<"  "<<"p1"<<p1<<"  "<<right<<endl;
            //cout<<nums[0]<<" "<<nums[1]<<" "<<nums[2]<<" "<<nums[3]<<endl;
            while(p0!=mid+1){
                if(nums[p0]/2>nums[p1]||nums[p0]/2==nums[p1]&&nums[p0]%2==1){
                    pairs_ltor+=right-p1+1;
                    p0++;
                }
                else p1++;
                if(p1==right+1) break;
            }
            //cout<<pairs_ltor<<"  ";
            p0=0;
            p1=mid+1;
            vector<int> temp_arr;
            while(p0!=mid+1||p1!=right+1){
                if(p0==mid+1){
                    while(p1!=right+1){
                        temp_arr.push_back(nums[p1]);
                        p1++;
                    }
                    break;
                }
                if(p1==right+1){
                    while(p0!=mid+1){
                        temp_arr.push_back(nums[p0]);
                        p0++;
                    }
                    break;
                }
                if(nums[p0]>nums[p1]){
                    temp_arr.push_back(nums[p0]);
                    p0++;
                }
                else{
                    temp_arr.push_back(nums[p1]);
                    p1++;
                }
            }
            int j=0;
            for(int i=left;i<=right;i++){
                nums[i]=temp_arr[j];
                cout<<nums[i]<<" ";
                j++;
            }
            cout<<endl;
            return countleft+countright+pairs_ltor;
        }
    }
    int reversePairs(vector<int>& nums) {
        return countPairs(nums,0,nums.size()-1);
    }
};
